type Query {
  users(nameQuery: String): [User!]!
  posts(nameQuery: String, skip: Int!, limit: Int!): [Post!]!
  comments(idOfPost: ID!): [Comment!]!
  userById(idQuery: ID!): User!
  postById(idQuery: ID!): Post!
}

type Mutation {
  signUp(
    userData: signup_data!
    file: Upload
    databaseId: String!
    otp: String!
  ): auth_data!
  login(email: String!, password: String!): auth_data!
  sendOtp(data: SendOtpData!): OtpReturnData!

  deleteUser: User!
  updateUser(updateData: update_user_data!): User!
  createPost(postData: create_post_data!): Post!
  deletePost(postId: ID!): Post!
  updatePost(postId: ID!, updateData: update_post_data): Post!
  createComment(data: create_comment_data!): Comment!
  deleteComment(commentId: ID!): Comment!
  updateComment(commentId: ID!, data: update_comment_data): Comment!
  startChatting(data: chat_input_data): Chat!
  like(postId: String!): likes_count
}

type likes_count {
  number: Int!
}
type Subscription {
  liveChat(chatId: ID!): chat_data!
}

type User {
  id: ID!
  name: String!
  userName: String!
  email: String!
  posts(visibility: visibilityQuery!): [Post]!
  comments(idOfPost: ID!): [Comment]!
}

type Post {
  id: ID!
  title: String!
  desc: String!
  visibility: String!
  developer: User!
  comments: [Comment]!
  image: String!
  totalComments: Int!
  likes: Int!
  createdAt: String!
  liked: Boolean!
}

type Comment {
  id: ID!
  text: String!
  post: Post!
  developer: User!
}

type Like {
  id: ID!
  post: Post!
  developer: User!
}

type Chat {
  id: ID!
  user1: String!
  user2: String!
  chats: [chat_data]
}

type AuthData {
  id: ID!
  token: String!
  expirationTime: Int!
}

type chat_data {
  id: ID!
  user: String!
  text: String!
}

input sub_data {
  user1: String!
  user2: String!
}

input chat_input_data {
  user2: String!
  text: String!
}

input input_login_data {
  email: String!
  password: String!
}

input signup_data {
  name: String!
  userName: String!
}
input create_post_data {
  title: String!
  visibility: String!
  desc: String!
  image: String!
}

input update_user_data {
  name: String
  email: String
}

input update_post_data {
  title: String
  visibility: String
  desc: String
}

input create_comment_data {
  text: String!
  idOfPost: ID!
}
input update_comment_data {
  text: String!
}

type auth_data {
  user: User!
  token: String!
  expirationTime: Int!
}

input SendOtpData {
  email: String!
  password: String!
}

type OtpReturnData {
  databaseId: String!
}

scalar Upload

enum visibilityQuery {
  PUBLIC
  PRIVATE
  ALL
}
