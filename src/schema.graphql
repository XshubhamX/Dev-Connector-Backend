type Query {
  users(nameQuery: String): [User!]!
  repos(nameQuery: String): [Repo!]!
  userById(idQuery: ID!): User!
  repoById(idQuery: ID!): Repo!
}

type Mutation {
  createUser(userData: create_user_data!): User!
  createRepo(repoData: create_repo_data!): Repo!
}

type User {
  id: ID!
  name: String!
  email: String!
  repos(visibility: visibilityQuery!): [Repo!]!
}

type Repo {
  id: ID!
  title: String!
  visibility: String!
  developer: ID!
}

input create_user_data {
  name: String!
  email: String!
}
input create_repo_data {
  title: String!
  visibility: String!
  developer: String!
}

enum visibilityQuery {
  PUBLIC
  PRIVATE
  ALL
}
